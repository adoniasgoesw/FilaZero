// Script para corrigir URLs inconsistentes no banco de dados
import pool from './config/db.js';
import dotenv from 'dotenv';

dotenv.config();

const fixImageUrls = async () => {
  try {
    console.log('üîç Conectando ao banco de dados...');
    
    // Testar conex√£o
    const result = await pool.query('SELECT NOW()');
    console.log('‚úÖ Banco conectado em:', result.rows[0].now);
    
    // Verificar categorias com URLs inconsistentes
    console.log('\nüìä Verificando URLs das imagens...');
    const categorias = await pool.query('SELECT id, nome, imagem_url FROM categorias WHERE imagem_url IS NOT NULL ORDER BY id');
    
    if (categorias.rows.length === 0) {
      console.log('‚ùå Nenhuma categoria com imagem encontrada');
      return;
    }
    
    console.log(`‚úÖ ${categorias.rows.length} categorias com imagem encontradas`);
    
    // Analisar e corrigir URLs
    for (const categoria of categorias.rows) {
      console.log(`\nüìÅ Categoria ID ${categoria.id}: ${categoria.nome}`);
      console.log(`üñºÔ∏è Imagem URL atual: ${categoria.imagem_url}`);
      
      let novaUrl = categoria.imagem_url;
      let precisaCorrigir = false;
      
      // Verificar se √© uma URL completa v√°lida
      if (categoria.imagem_url.startsWith('https://filazero-sistema-de-gestao.onrender.com/uploads/')) {
        console.log('‚úÖ URL de produ√ß√£o v√°lida');
      } else if (categoria.imagem_url.startsWith('/uploads/')) {
        console.log('‚úÖ Caminho relativo v√°lido');
      } else if (categoria.imagem_url.includes('https://filazero-sistema-de-gestao.onrender.comhttps://')) {
        console.log('‚ùå URL duplicada detectada! Corrigindo...');
        novaUrl = categoria.imagem_url.replace('https://filazero-sistema-de-gestao.onrender.comhttps://', 'https://');
        precisaCorrigir = true;
      } else {
        console.log('‚ö†Ô∏è Formato de URL n√£o reconhecido');
      }
      
      // Corrigir se necess√°rio
      if (precisaCorrigir) {
        try {
          await pool.query('UPDATE categorias SET imagem_url = $1 WHERE id = $2', [novaUrl, categoria.id]);
          console.log(`‚úÖ URL corrigida para: ${novaUrl}`);
        } catch (error) {
          console.error(`‚ùå Erro ao corrigir URL da categoria ${categoria.id}:`, error.message);
        }
      }
    }
    
    // Verificar resultado final
    console.log('\nüìà Verifica√ß√£o final das URLs...');
    const categoriasFinais = await pool.query('SELECT id, nome, imagem_url FROM categorias WHERE imagem_url IS NOT NULL ORDER BY id');
    
    categoriasFinais.rows.forEach(categoria => {
      console.log(`ID ${categoria.id}: ${categoria.nome} - ${categoria.imagem_url}`);
    });
    
    console.log('\n‚úÖ Processo de corre√ß√£o conclu√≠do!');
    
  } catch (error) {
    console.error('‚ùå Erro ao corrigir URLs:', error);
  } finally {
    await pool.end();
  }
};

fixImageUrls();
